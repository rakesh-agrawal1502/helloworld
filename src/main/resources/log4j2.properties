# Declare loggers
name=LoggingConfig

appenders=a_console, a_rolling
rootLogger.level=info
rootLogger.appenderRefs=ar_console,ar_rolling
rootLogger.appenderRef.ar_console.ref=ConsoleAppender
rootLogger.appenderRef.ar_rolling.ref=fileLogger

# Console logger
appender.a_console.type=Console
appender.a_console.name=ConsoleAppender
appender.a_console.layout.type=PatternLayout
appender.a_console.layout.pattern=%d{yyyy-MM-dd HH:mm:ss} %level [%t] [%l] - %msg%n

# File logger
property.basePath = ./log

appender.a_rolling.type=RollingFile
appender.a_rolling.name=fileLogger
appender.a_rolling.layout.pattern=%d{yyyy-MM-dd HH:mm:ss} %level [%t] [%l] - %msg%n
appender.a_rolling.fileName=${basePath}/helloworld.log
appender.a_rolling.filePattern=${basePath}/helloworld_%d{yyyyMMdd}.log.gz
appender.a_rolling.layout.type=PatternLayout
appender.a_rolling.policies.type=Policies

# RollingFileAppender rotation policy
appender.a_rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.a_rolling.policies.size.size = 10KB
appender.a_rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.a_rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true

appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 10
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete all files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 10d